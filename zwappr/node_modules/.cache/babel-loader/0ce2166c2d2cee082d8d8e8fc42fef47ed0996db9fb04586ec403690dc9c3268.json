{"ast":null,"code":"var _jsxFileName = \"/Users/bheesha.k/Desktop/Zwappr-emiko-copy/zwappr/src/Home.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { isLoggedIn, removeUserSession } from './AuthServices';\n// import axios from 'axios';\n// import {DateSelector} from './DateSelector';\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './home.css';\n// import { ChakraProvider, IconButton, Input, Select, Button, Alert,AlertIcon, AlertTitle, useDisclosure, Box, Spinner, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useToast } from '@chakra-ui/react';\n// import { Avatar, AvatarBadge, AvatarGroup } from '@chakra-ui/react'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { getUser } from './AuthServices';\n// import { faThumbsDown, faThumbsUp, faCircleInfo, faPaperPlane, faCircleUser, faRightFromBracket } from '@fortawesome/free-solid-svg-icons';\n\n// import {\n//   Popover,\n//   PopoverTrigger,\n//   PopoverContent,\n//   PopoverHeader,\n//   PopoverBody,\n//   PopoverFooter,\n//   PopoverArrow,\n//   PopoverCloseButton,\n//   PopoverAnchor,\n// } from '@chakra-ui/react'\n\n// function Home() {\n//   const usery = getUser() || {};\n//   console.log(usery)\n//     const [allListings, setAllListings] = useState([]);\n//     const [displayedListings, setDisplayedListings] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [isLoading, setIsLoading] = useState(false);\n//     const [message, setMessage] = useState('');\n//     const [searchQuery, setSearchQuery] = useState('');\n//     const [selectedListing, setSelectedListing] = useState(null);\n//     const { isOpen: isAddOpen, onOpen: onAddOpen, onClose: onAddClose } = useDisclosure();\n//     const { isOpen: isEnlargedOpen, onOpen: onEnlargedOpen, onClose: onEnlargedClose } = useDisclosure();\n//     const [selectedImage, setSelectedImage] = useState(null);\n//     const [selectedFilter, setSelectedFilter] = useState('None');\n//     const toast = useToast();\n//     const [reservationDetails, setReservationDetails] = useState({\n//         start_date: null,\n//         end_date: null,\n//     });\n//     const [itemDetails, setItemDetails] = useState({\n//       username: '',\n//       email: '',\n//       image_url: '',\n//       location: '',\n//       category: '',\n//       item_name: '',\n//       price_per_day: '',\n//       description: '',\n//       start_date: null,\n//       end_date: null\n//   });\n\n//   //UseEffects////////////////////////////////////////////////////\n//     useEffect(() => {\n//         getAllListings(); // Fetch listings on mount\n//     }, []);\n\n//   const navigate = useNavigate();\n//   const handleLogout = () => {\n//     removeUserSession(); // Remove user session\n//     navigate('/'); // Redirect to the home page or login page\n//   };\n\n//   const handleSearch = (e) => {\n//     const query = e.target.value.toLowerCase();\n//     setSearchQuery(query);\n//     if (query === '') {\n//         setDisplayedListings(allListings);\n//     } else {\n//         const filteredListings = allListings.filter(listing =>\n//             listing.item_name && listing.item_name.toLowerCase().includes(query)\n//         );\n//         setDisplayedListings(filteredListings);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { id, value } = e.target;\n//     setItemDetails(prevDetails => ({\n//         ...prevDetails,\n//         [id]: value\n//     }));\n//   };\n\n//   const handleImageChange = (event) => {\n//     const file = event.target.files[0];\n//     setSelectedImage(file); // Store the selected file in state\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault(); // Prevent the default form submission behavior\n\n//     // Validate the form fields\n//     if (typeof itemDetails.item_name === 'string' && !itemDetails.item_name.trim()) {\n//         setError('Please enter a name.');\n//         return;\n//     }\n\n//     if (!itemDetails.category || itemDetails.category === 'None') {\n//         setError('Please select a category.');\n//         return;\n//     }\n\n//     if (!itemDetails.location) {\n//       setError('Please select a location.');\n//       return;\n//   }\n\n//     if (!itemDetails.start_date) {\n//         setError('Please select a start date.');\n//         return;\n//     }\n\n//     if (!itemDetails.end_date) {\n//         setError('Please select an end date.');\n//         return;\n//     }\n\n//     if (new Date(itemDetails.start_date) > new Date(itemDetails.end_date)) {\n//         setError('Start date cannot be later than the end date.');\n//         return;\n//     }\n\n//     if (!selectedImage) {\n//         setError('Please select an image.');\n//         return;\n//     }\n\n//     setIsLoading(true);\n//     setError('');\n\n//     try {\n//         // Creating a FormData object to send the image\n//         const formData = new FormData();\n//         formData.append('media', selectedImage);\n\n//         // Send the image to the backend\n//         const response = await axios.post('http://localhost:5001/uploadToCloudinary', formData, {\n//             headers: {\n//                 'Content-Type': 'multipart/form-data',\n//             },\n//         });\n\n//         console.log('Image uploaded successfully:', response.data.url);\n\n//         // Add the uploaded image URL to itemDetails\n//         const imageUrl = response.data.url;\n//         const updatedItemDetails = { ...itemDetails, image_url: imageUrl, username: usery.username, user_id: usery.user_id, email: usery.email };\n\n//         // Send `updatedItemDetails` to the backend to save the listing\n//         console.log('Final item details:', updatedItemDetails);\n\n//         const response2 = await fetch('http://localhost:5001/addListing', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify(updatedItemDetails),\n//         });\n\n//         if (response2.ok) {\n//             console.log('Item details added to database successfully.');\n//             setMessage('Item added successfully!');\n//             onAddClose();//modal is closed here and success toast is displayed\n//             toast({\n//                 title: 'Success',\n//                 description: 'Your Listing has been added',\n//                 status: 'success',\n//                 duration: 3000,\n//                 isClosable: true,\n//             });\n//             getAllListings();\n//         } else {\n//             const errorData = await response2.json();\n//             console.error('Error adding item details:', errorData.message);\n//             setError('Failed to add item. Image size might be too large. Please try again.');\n//         }\n\n//         setIsLoading(false);\n//     } catch (error) {\n//         console.error('Error uploading item:', error);\n//         setError('Failed to upload item. Please try again.');\n//         setIsLoading(false);\n//     }\n\n//     setItemDetails({\n//         username: '',\n//         email: '',\n//         image_url: '',\n//         location: '',\n//         category: '',\n//         item_name: '',\n//         price_per_day: '',\n//         description: '',\n//         start_date: null,\n//         end_date: null\n//     });\n// };\n\n// const handleFilterChange = (e) => {\n//   const value = e.target.value;\n//   setSelectedFilter(value);\n//   handleFilter(value);\n// };\n\n// const handleFilter = (filter) => {\n//   let filteredListings = [...allListings];\n\n//   if (filter === 'Reserved Items') {\n//     // Filter listings where the current user's user_id matches the current_renter field\n//     filteredListings = allListings.filter(\n//       (listing) => listing.current_renter && listing.current_renter === usery.user_id\n//     );\n//     console.log('Reserved items:', filteredListings);\n//   } else if (filter !== 'None') {\n//     // Filter listings by category\n//     filteredListings = allListings.filter((listing) => listing.category === filter);\n//   }\n\n//   // Apply search query filter if applicable\n//   if (searchQuery !== '') {\n//     filteredListings = filteredListings.filter((listing) =>\n//       listing.item_name.toLowerCase().includes(searchQuery)\n//     );\n//   }\n\n//   setDisplayedListings(filteredListings);\n// };\n\n// const cancelReservation = async () => {\n//   setIsLoading(true);\n//   setError('');\n\n//   try {\n//     const reservationData = {\n//       item_id: selectedListing?.item_id,\n//       renter_id: usery.user_id,\n//     };\n\n//     const response = await fetch('http://localhost:5001/cancelReservation', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(reservationData),\n//     });\n\n//     if (response.ok) {\n//       console.log('Reservation cancelled successfully.');\n//       setMessage('Reservation cancelled successfully!');\n//       toast({\n//         title: 'Success',\n//         description: 'Your reservation has been cancelled.',\n//         status: 'success',\n//         duration: 3000,\n//         isClosable: true,\n//       });\n//       onEnlargedClose(); // Close the enlarged listing modal\n//       setSelectedListing(null); // Reset selected listing\n//       getAllListings(); // Refresh listings\n//     } else {\n//       const errorData = await response.json();\n//       console.error('Error cancelling reservation:', errorData.message);\n//       setError('Failed to cancel reservation. Please try again.');\n//       toast({\n//         title: 'Error',\n//         description: 'Failed to cancel reservation. Please try again.',\n//         status: 'error',\n//         duration: 3000,\n//         isClosable: true,\n//       });\n//     }\n//   } catch (error) {\n//     console.error('Error cancelling reservation:', error);\n//     setError('Failed to cancel reservation. Please try again.');\n//     toast({\n//       title: 'Error',\n//       description: 'Failed to cancel reservation. Please try again.',\n//       status: 'error',\n//       duration: 3000,\n//       isClosable: true,\n//     });\n//   } finally {\n//     setIsLoading(false);\n//   }\n// }\n\n// const deleteListing = async () => {\n//   setIsLoading(true);\n//   setError('');\n\n//   try {\n//     const listingData = {\n//       item_id: selectedListing?.item_id,\n//       user_id: usery.user_id,\n//     };\n\n//     const response = await fetch('http://localhost:5001/removeListing', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(listingData),\n//     });\n\n//     if (response.ok) {\n//       console.log('Listing deleted successfully.');\n//       setMessage('Listing deleted successfully!');\n//       toast({\n//         title: 'Success',\n//         description: 'Your listing has been deleted.',\n//         status: 'success',\n//         duration: 3000,\n//         isClosable: true,\n//       });\n//       onEnlargedClose(); // Close the enlarged listing modal\n//       setSelectedListing(null); // Reset selected listing\n//       getAllListings(); // Refresh listings\n//     } else {\n//       const errorData = await response.json();\n//       console.error('Error deleting listing:', errorData.message);\n//       setError('Failed to delete listing. Please try again.');\n//       toast({\n//         title: 'Error',\n//         description: 'Failed to delete listing. Please try again.',\n//         status: 'error',\n//         duration: 3000,\n//         isClosable: true,\n//       });\n//     }\n//   } catch (error) {\n//     console.error('Error deleting listing:', error);\n//     setError('Failed to delete listing. Please try again.');\n//     toast({\n//       title: 'Error',\n//       description: 'Failed to delete listing. Please try again.',\n//       status: 'error',\n//       duration: 3000,\n//       isClosable: true,\n//     });\n//   } finally {\n//     setIsLoading(false);\n//   }\n// }\n\n// const enlargeListing = (listing) => {\n//   setSelectedListing(listing);\n//   onEnlargedOpen();\n// };\n\n// async function handleSubmitReservation() {\n//   console.log('Submitting reservation:');\n//   setIsLoading(true);\n//   setError('');\n\n//   // Validate the reservation dates\n//   if (!reservationDetails.start_date || !reservationDetails.end_date) {\n//     setError('Please select both start and end dates.');\n//     toast({\n//       title: 'Error',\n//       description: 'Please select both start and end dates.',\n//       status: 'error',\n//       duration: 3000,\n//       isClosable: true,\n//     });\n//     setIsLoading(false);\n//     return;\n//   }\n\n//   const selectedStartDate = new Date(reservationDetails.start_date);\n//   const selectedEndDate = new Date(reservationDetails.end_date);\n//   const listingStartDate = new Date(selectedListing?.start_date);\n//   const listingEndDate = new Date(selectedListing?.end_date);\n\n//   if (selectedStartDate < listingStartDate) {\n//     setError('Reservation start date cannot be before the listing start date.');\n//     toast({\n//       title: 'Error',\n//       description: 'Reservation start date cannot be before the listing start date.',\n//       status: 'error',\n//       duration: 3000,\n//       isClosable: true,\n//     });\n//     setIsLoading(false);\n//     return;\n//   }\n\n//   if (selectedEndDate > listingEndDate) {\n//     setError('Reservation end date cannot be after the listing end date.');\n//     toast({\n//       title: 'Error',\n//       description: 'Reservation end date cannot be after the listing end date.',\n//       status: 'error',\n//       duration: 3000,\n//       isClosable: true,\n//     });\n//     setIsLoading(false);\n//     return;\n//   }\n\n//   try {\n//     // Send reservation details to the backend\n//     const reservationData = {\n//       itemowner_id: selectedListing?.user_id,\n//       item_id: selectedListing?.item_id,\n//       renter_id: usery.user_id,//renter is the cuurent user\n//       reservation_start_date: reservationDetails.start_date,\n//       reservation_end_date: reservationDetails.end_date,\n//     };\n\n//     const response = await fetch('http://localhost:5001/addReservation', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(reservationData),\n//     });\n\n//     if (response.ok) {\n//       console.log('Reservation added successfully.');\n//       setMessage('Reservation added successfully!');\n//       toast({\n//         title: 'Success',\n//         description: 'Your reservation has been added.',\n//         status: 'success',\n//         duration: 3000,\n//         isClosable: true,\n//       });\n//       onEnlargedClose(); // Close the enlarged listing modal\n//       setReservationDetails({ start_date: null, end_date: null }); // Reset reservation details\n//       setSelectedListing(null); // Reset selected listing\n//       setDisplayedListings(allListings); // Reset displayed listings\n//       getAllListings(); // Refresh listings\n//     } else {\n//       const errorData = await response.json();\n//       console.error('Error adding reservation:', errorData.message);\n//       setError('Failed to add reservation. Please try again.');\n//       toast({\n//         title: 'Error',\n//         description: 'Failed to add reservation. Please try again.',\n//         status: 'error',\n//         duration: 3000,\n//         isClosable: true,\n//       });\n//     }\n//   } catch (error) {\n//     console.error('Error submitting reservation:', error);\n//     setError('Failed to submit reservation. Please try again.');\n//     toast({\n//       title: 'Error',\n//       description: 'Failed to submit reservation. Please try again.',\n//       status: 'error',\n//       duration: 3000,\n//       isClosable: true,\n//     });\n//   } finally {\n//     setIsLoading(false);\n//   }\n// }\n\n//   async function getAllListings (){\n//     try{\n//         const response = await fetch(`http://localhost:5001/getItems`, {\n//             method: 'GET',\n//             headers: { 'Content-Type': 'application/json',\n//                 \"Access-Control-Allow-Origin\": \"*\",\n//                 \"Access-Control-Allow-Headers\": \"Content-Type\",\n//                 \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET\"\n//             },\n//         });\n\n//         const data = await response.json();\n//         console.log('Response is HERE:', data);\n\n//         if (response.ok) {\n//             console.log('All Listings retrieved:', data);\n\n//             // Update the state with the retrieved movie cards\n//             setAllListings(data.map(listing => ({ ...listing })));\n//             console.log('All Listings displayed here:', allListings);\n//             setDisplayedListings(data); \n\n//         } else{\n//             console.error('Error retrieving movie card:', data.message);\n//             setError('Error retrieving movie cards :-(');\n//         }\n\n//     } catch (error) {\n//             console.log('An error getting cards occurred. Please try again.');\n//         }\n\n// }\n\n//  // return (\n//     // <div className=\"App\">\n//     //   <div className='topbar'>\n//     //     <div className='titleandlogo'><img width=\"52\" height=\"52\" src=\"https://img.icons8.com/metro/52/swap.png\" alt=\"swap\"/><p id='title'>Zwappr</p></div>\n//        // {\n//           /* <div className=\"top-container\">\n//   <div className=\"tagline\">For the small things.</div>\n//   <div className=\"modern-search-bar\">\n//     <input\n//       type=\"text\"\n//       placeholder=\"Search listings...\"\n//       value={searchQuery}\n//       onChange={handleSearch}\n//     />\n//     <img src=\"https://img.icons8.com/ios-filled/20/000000/search--v1.png\" alt=\"Search\" className=\"search-icon\" />\n//   </div>\n// </div>\n\n// <div className=\"category-bar\">\n//   {[\n//     { name: 'Furniture', icon: 'furniture.png' },\n//     { name: 'Games', icon: 'games.png' },\n//     { name: 'Clothing', icon: 'clothing.png' },\n//     { name: 'Home Decor', icon: 'homedecor.png' },\n//     { name: 'Party Supplies', icon: 'party.png' }, \n//     { name: 'Cameras & Photography', icon: 'camersandphotography.png' },\n//     { name: 'Camping & Outdoors', icon: 'campingandoutdoors.png' },\n//     { name: 'Catering Equipment', icon: 'cateringequipment.png' },\n//   ].map(category => (\n//     <div className=\"category\" key={category.name}>\n//       <img src={require(`./assets/${category.icon}`)} alt={category.name} />\n//       <span>{category.name}</span>\n//     </div>\n//   ))}\n// </div> */}\n\n// <div className=\"top-container\">\n//   <div className=\"header-row\">\n//     <div className=\"logo-section\">\n//       <img src=\"https://img.icons8.com/metro/52/swap.png\" alt=\"swap\" />\n//       <span className=\"logo-text\">Zwappr</span>\n//     </div>\n\n//     <div className=\"search-section\">\n//       <p className=\"tagline\">For the small things.</p>\n//       <div className=\"modern-search-bar\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search listings...\"\n//           value={searchQuery}\n//           onChange={handleSearch}\n//         />\n//         <img className=\"search-icon\" src=\"https://img.icons8.com/ios-glyphs/30/search--v1.png\" alt=\"search\" />\n//       </div>\n//     </div>\n\n//     <div className=\"icon-buttons\">\n//       <button className=\"circle-button\"><FontAwesomeIcon icon={faCircleUser} /></button>\n//       <button className=\"circle-button\"><FontAwesomeIcon icon={faCircleInfo} /></button>\n//     </div>\n//   </div>\n\n//   <div className=\"category-bar\">\n//     <div className=\"category\"><img src={require('./assets/furniture.png')} alt=\"Furniture\" /><span>Furniture</span></div>\n//     <div className=\"category\"><img src={require('./assets/games.png')} alt=\"Games\" /><span>Games</span></div>\n//     <div className=\"category\"><img src={require('./assets/clothing.png')} alt=\"Clothing\" /><span>Clothing</span></div>\n//     <div className=\"category\"><img src={require('./assets/homedecor.png')} alt=\"Home Decor\" /><span>Home Decor</span></div>\n//     <div className=\"category\"><img src={require('./assets/party.png')} alt=\"Party Supplies\" /><span>Party Supplies</span></div>\n//     <div className=\"category\"><img src={require('./assets/camersandphotography.png')} alt=\"Cameras\" /><span>Cameras & Photography</span></div>\n//     <div className=\"category\"><img src={require('./assets/campingandoutdoors.png')} alt=\"Camping\" /><span>Camping & Outdoors</span></div>\n//     <div className=\"category\"><img src={require('./assets/cateringequipment.png')} alt=\"Catering\" /><span>Catering Equipment</span></div>\n//   </div>\n// </div>\n\n//         <div className='profileicon'>\n//         <Popover >\n//             <PopoverTrigger>\n//                 <Button  _hover={{ bg: '#3eaff6' }} marginTop='5px'backgroundColor=\" rgb(80, 78, 78);\"><FontAwesomeIcon size=\"2xl\" style={{color: \"white\",}} icon={faCircleUser} /></Button>\n//             </PopoverTrigger>\n//             <PopoverContent width='50vw'backgroundColor=\" rgb(80, 78, 78);\">\n//                 <PopoverArrow />\n//                 <PopoverCloseButton />\n//                 <PopoverHeader>\n//                     <Avatar\n//                         size='lg'\n//                         name={usery?.username || 'Guest'} // Use 'Guest' if usery.username is undefined\n//                         src='https://bit.ly/broken-link'\n//                     />\n//                     <p id='pruh'><b>Hello, {usery?.username || 'Guest'}</b></p>\n//                     <p>Welcome!</p>\n//                 </PopoverHeader>\n//                 <PopoverBody>{isLoggedIn() && (<button onClick={handleLogout} className=\"logout_butt\">Logout <FontAwesomeIcon size='sm' icon={faRightFromBracket} style={{color: \"white\",}} /></button>)}</PopoverBody>\n//             </PopoverContent>\n//         </Popover>\n//         <Popover >\n//             <PopoverTrigger>\n//                 <Button _hover={{ bg: '#3eaff6' }} className=\"usecontrol\"marginTop='5px'backgroundColor=\" rgb(80, 78, 78);\"><FontAwesomeIcon icon={faCircleInfo} size=\"2xl\" style={{color: \"white\",}} /></Button>\n//             </PopoverTrigger>\n//             <PopoverContent width='50vw'backgroundColor=\" rgb(80, 78, 78);\">\n//                 <PopoverArrow />\n//                 <PopoverCloseButton />\n//                 <PopoverHeader>Info</PopoverHeader>\n//                 <PopoverBody>\n//                     <ul>\n//                         <li>Press the Add Listing button to post a listing.</li>\n//                         &nbsp;\n//                         <li>Click on each listing to see more.</li>\n//                     </ul>\n//                 </PopoverBody>\n//             </PopoverContent>\n//         </Popover>\n//         </div>\n//       </div>\n\n//       <div className='buttons'>\n//       <Button id='newlisting' color='black' fontSize='14px' colorScheme='white;' onClick={onAddOpen}>+ Add New Listing</Button>\n//         <div id='filter'>Filter\n//         <Select iconSize='14px' id='filter' placeholder='' onChange={handleFilterChange} bg=\"white\" color=\"black\" border=\"none\">\n//             <option value='None'>None</option>\n//             <option value='Reserved Items'>Reserved items</option>\n//             <option value='Party Supplies'>Party Supplies</option>\n//             <option value='Camera Equipment'>Camera Equipment</option>\n//             <option value='Furniture'>Furniture</option>\n//             <option value='Games'>Games</option>\n//             <option value='Clothing'>Clothing</option>\n//             <option value='Home Decor'>Home Decor</option>\n//             <option value='Camping & Outdoors'>Camping & Outdoors</option>\n//             <option value='Catering Equipment'>Catering Equipment</option>\n//             <option value='Books'>Books</option>\n//             <option value='Other'>Other</option>\n\n//         </Select>\n\n//         </div>\n//       </div>\n\n//       <div className ='listings_box'>\n//         <div className='sub_listings_box'>\n//           {displayedListings.map((listing) => (\n//             <div key={listing.item_id} onClick={() => enlargeListing(listing)}className='listing'>\n\n//               <div id='listing_img'>\n//                 <img src={listing.image_url} alt={listing.title} className='listing_image' id='listing_img'/>\n//               </div>\n//               <div id='listing_info'>\n//               <div id='i_name_and_price'><h3>{listing.item_name}</h3> <h3>{listing.price_per_day}</h3> </div>\n//               <p id='listing_location'>{listing.location}</p>\n//               <Avatar colorPalette='black' size='2xs'name={listing.username} src='https://bit.ly/broken-link' />&nbsp;<b>{listing.username}</b>\n\n//               </div>\n\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n\n//       {/* Add Listing Modal */}\n//       <Modal id='listing_entry' isOpen={isAddOpen} onClose={onAddClose}>\n//                     <ModalOverlay />\n//                     <ModalContent>\n//                         <ModalHeader>Add an Item for Rent!</ModalHeader>\n//                         <ModalCloseButton />\n//                         <ModalBody>\n\n//                                 <Box id='i_name'>\n//                                     Item Name:<Input id='item_name' focusBorderColor='black' placeholder='e.g. Camera' value={itemDetails.item_name} onChange={handleChange} />\n//                                 </Box>\n//                                 <Box id='i_price'>\n//                                     Price Per Day ($):<Input id='price_per_day' focusBorderColor='black' placeholder='e.g. 50' value={itemDetails.price_per_day} onChange={handleChange} />\n//                                 </Box>\n//                                 <Box id='i_category'>\n//                                     Category: \n//                                     <Select id='category' focusBorderColor='black' iconSize='20px' className='item_filter' placeholder='None' value={itemDetails.category} onChange={handleChange}>\n//                                         <option value='Party Supplies'>Party Supplies</option>\n//                                         <option value='Camera Equipment'>Camera Equipment</option>\n//                                         <option value='Furniture'>Furniture</option>\n//                                         <option value='Games'>Games</option>\n//                                         <option value='Clothing'>Clothing</option>\n//                                         <option value='Home Decor'>Home Decor</option>\n//                                         <option value='Camping & Outdoors'>Camping & Outdoors</option>\n//                                         <option value='Catering Equipment'>Catering Equipment</option>\n//                                         <option value='Books'>Books</option>\n//                                         <option value='Other'>Other</option>\n//                                     </Select>\n//                                 </Box>\n\n//                                 <Box id='i_location'>\n//                                     Location: \n//                                     <Select id='location' focusBorderColor='black' iconSize='20px' className='item_location' placeholder='None' value={itemDetails.location} onChange={handleChange}>\n//                                       <option value=\"\">Select Dorm / Building</option>\n//                                       <option value=\"Cascade Hall\">Cascade Hall</option>\n//                                       <option value=\"Aurora Hall\">Aurora Hall</option>\n//                                       <option value=\"Olympus Hall\">Olympus Hall</option>\n//                                       <option value=\"Yamnuska Hall\">Yamnuska Hall</option>\n//                                       <option value=\"Global Village\">Global Village</option>\n//                                       <option value=\"Kananaskis Hall\">Kananaskis Hall</option>\n//                                       <option value=\"Rundle Hall\">Rundle Hall</option>\n//                                       <option value=\"Crowsnest Hall\">Crowsnest Hall</option>\n//                                       <option value=\"International House\">International House</option>\n//                                       <option value=\"Varsity Courts\">Varsity Courts</option>\n//                                     </Select>\n//                                 </Box>\n\n//                                 <Box id=\"i_img\">\n//                                     Image:\n//                                     <Input\n//                                         id=\"item_image\"\n//                                         focusBorderColor=\"black\"\n//                                         type=\"file\"\n//                                         onChange={handleImageChange} // Capture the selected image into a useState\n//                                     />\n//                                 </Box>\n//                                 <Box id='i_description'>\n//                                     About:<Input id='description' focusBorderColor='black' placeholder='e.g. Say something about your listing...' value={itemDetails.description} onChange={handleChange} />\n//                                 </Box>\n//                                 <Box id='i_start_date'>\n//                                     Start Date:\n//                                     <DatePicker\n//                                         selected={itemDetails.start_date}\n//                                         onChange={(date) => setItemDetails(prevDetails => ({\n//                                             ...prevDetails,\n//                                             start_date: date.toISOString() // Save as ISO string\n//                                         }))}\n//                                         dateFormat=\"yyyy-MM-dd\"\n//                                         placeholderText=\"Select a start date\"\n//                                         focusBorderColor='black'\n//                                     />\n//                                 </Box>\n//                                 <Box id='i_end_date'>\n//                                     End Date:\n//                                     <DatePicker\n//                                         selected={itemDetails.end_date}\n//                                         onChange={(date) => setItemDetails(prevDetails => ({\n//                                             ...prevDetails,\n//                                             end_date: date.toISOString() // Save as ISO string\n//                                         }))}\n//                                         dateFormat=\"yyyy-MM-dd\"\n//                                         placeholderText=\"Select an end date\"\n//                                         focusBorderColor='black'\n//                                     />\n//                                 </Box>\n\n//                             {error && (\n//                                 <Alert status='error' mt={4}>\n//                                     <AlertIcon />\n//                                     <AlertTitle>{error}</AlertTitle>\n//                                 </Alert>\n//                             )}\n//                         </ModalBody>\n//                         <ModalFooter>\n//                             <Button colorScheme='blue' mr={3} onClick={onAddClose}>\n//                                 Close\n//                             </Button>\n//                             <Button\n//                                 id='submit_details'\n//                                 variant='ghost'\n//                                 onClick={handleSubmit}\n//                                 isLoading={isLoading}\n//                                 loadingText='Submitting'\n//                                 spinner={<Spinner size=\"sm\" />}\n//                             >\n//                                 Submit\n//                             </Button>\n//                         </ModalFooter>\n//                     </ModalContent>\n//                 </Modal>\n\n//       {/* Enlarged Listing Modal */}\n\n//       <Modal className='enlargedCard' isOpen={isEnlargedOpen} onClose={onEnlargedClose} size='lg'>\n//                     <ModalOverlay />\n//                     <ModalContent bg=\"white\" color=\"black\" overflowY='scroll' maxWidth='100%' maxHeight='80%'>\n//                         <ModalHeader display=\"flex\" flexDirection=\"column\" alignItems='center' textAlign=\"center\"><div className='titleandlogo'><img width=\"52\" height=\"52\" src=\"https://img.icons8.com/metro/52/swap.png\" alt=\"swap\"/><p id='title'>Zwappr</p></div></ModalHeader>\n//                         <ModalCloseButton />\n//                         <ModalBody display=\"flex\" flexDirection=\"row\" alignItems=\"center\" marginLeft=\"5%\" marginRight=\"5%\" height=\"fit-content\" overflow-y=\"scroll\" justifyContent=\"space-evenly\">\n//                             <div id='left_side'>\n//                               <p id='listing_name'>{selectedListing?.item_name}</p>\n//                               <img src={selectedListing?.image_url} alt={selectedListing?.item_name} className='listing_image' id='enlarged_img'/>\n//                               <Avatar colorPalette='black' size='md'name={selectedListing?.username} src='https://bit.ly/broken-link' />&nbsp;<h2><b>{selectedListing?.username}</b></h2>\n//                               <p id='listing_description'>{selectedListing?.description}</p>\n//                               <p id='listing_email'><b>Email: {selectedListing?.email}</b></p>\n//                             </div>\n//                             <div id='right_side'>\n//                             <div id='reservation_details'>\n//                               <h2><b>${selectedListing?.price_per_day}</b>/day</h2>\n//                               <p id='listing_location'><b>Location:</b> {selectedListing?.location}</p>\n//                               <p id='listing_dates'>\n//                                 <b>Available From:</b> {new Date(selectedListing?.start_date).toLocaleDateString('en-GB')} \n//                                 <b>To:</b> {new Date(selectedListing?.end_date).toLocaleDateString('en-GB')}\n//                               </p>\n//                               <div>\n//                                 From:\n//                                 <DatePicker\n//                                   selected={reservationDetails.start_date}\n//                                   onChange={(date) => setReservationDetails(prevDetails => ({\n//                                     ...prevDetails,\n//                                     start_date: date.toISOString() // Save as ISO string\n//                                   }))}\n//                                   dateFormat=\"yyyy-MM-dd\"\n//                                   placeholderText=\"Select a start date\"\n//                                   focusBorderColor='black'\n//                                 />\n//                               </div>\n//                               <div>\n//                                 To:\n//                                 <DatePicker\n//                                   selected={reservationDetails.end_date}\n//                                   onChange={(date) => setReservationDetails(prevDetails => ({\n//                                     ...prevDetails,\n//                                     end_date: date.toISOString() // Save as ISO string\n//                                   }))}\n//                                   dateFormat=\"yyyy-MM-dd\"\n//                                   placeholderText=\"Select an end date\"\n//                                   focusBorderColor='black'\n//                                 />\n//                               </div>\n\n//                               {/* submit_reservation element rendered only if current user is not the smae as owner of item */}\n//                               {selectedListing?.isBooked === false && usery.user_id !== selectedListing?.user_id && (\n//                                 <div id='submit_reservation' className='reservation_options'>\n//                                   <Button\n//                                     id='submit_reservation'\n//                                     variant='ghost'\n//                                     onClick={() => handleSubmitReservation()}\n//                                     isLoading={isLoading}\n//                                     loadingText='Submitting'\n//                                     spinner={<Spinner size=\"sm\" />}\n//                                   >\n//                                     Reserve\n//                                   </Button>\n//                                 </div>\n//                               )}\n\n//                               {/* item_reserved element is displayed only if the isBooked field for the item is true */}\n//                               {selectedListing?.isBooked === true && (\n//                                 <div id='item_reserved' className='reservation_options'>\n//                                   Item Currently Reserved\n//                                 </div>\n//                               )}\n\n//                               {/* cancel_reservation element is displayed if the current user owns the selectedListing or if the current user is currently rennting the item*/}\n//                               {selectedListing?.isBooked === true && \n//                                 (usery.user_id === selectedListing?.current_renter || usery.user_id === selectedListing?.user_id) && (\n//                                 <div id='cancel_reservation' className='reservation_options' onClick={cancelReservation}>\n//                                   Cancel Current Reservation\n//                                 </div>\n//                               )}\n\n//                               {/* delete_listing element is displayed only if the current user owns the item */}\n//                               {usery.user_id === selectedListing?.user_id && (\n//                                 <div id='delete_listing' className='reservation_options' onClick={deleteListing}>\n//                                   Delete Listing\n//                                 </div>\n//                               )}\n//                             </div>\n\n//                             </div>\n\n//                         </ModalBody>\n\n//                         <ModalFooter>\n//                             <Button colorScheme=\"black\" mr={3} onClick={onEnlargedClose}>\n//                                 Close\n//                             </Button>\n//                         </ModalFooter>\n//                     </ModalContent>\n//                 </Modal>\n\n//     </div>\n//   );\n// }\n\n// export default Home;\n\n// Final Home.js implementation with duplicates removed and layout structured cleanly\n// Based on your design preferences\n\n// Final cleaned and structured Home.js using Emiko's layout\n\nimport React, { useEffect, useState } from 'react';\nimport { isLoggedIn, removeUserSession, getUser } from './AuthServices';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Button, Select, Spinner, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useDisclosure, useToast, Alert, AlertIcon, AlertTitle, Box } from '@chakra-ui/react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleUser, faCircleInfo, faRightFromBracket } from '@fortawesome/free-solid-svg-icons';\nimport { Avatar } from '@chakra-ui/react';\nimport './home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const usery = getUser() || {};\n  const [allListings, setAllListings] = useState([]);\n  const [displayedListings, setDisplayedListings] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedListing, setSelectedListing] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const {\n    isOpen: isAddOpen,\n    onOpen: onAddOpen,\n    onClose: onAddClose\n  } = useDisclosure();\n  const {\n    isOpen: isEnlargedOpen,\n    onOpen: onEnlargedOpen,\n    onClose: onEnlargedClose\n  } = useDisclosure();\n  const toast = useToast();\n  const navigate = useNavigate();\n  useEffect(() => {\n    getAllListings();\n  }, []);\n  const handleLogout = () => {\n    removeUserSession();\n    navigate('/');\n  };\n  const handleSearch = e => {\n    const query = e.target.value.toLowerCase();\n    setSearchQuery(query);\n    const filtered = allListings.filter(listing => listing.item_name && listing.item_name.toLowerCase().includes(query));\n    setDisplayedListings(query ? filtered : allListings);\n  };\n  const getAllListings = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/getItems');\n      const data = await response.json();\n      if (response.ok) {\n        setAllListings(data);\n        setDisplayedListings(data);\n      }\n    } catch (error) {\n      console.error('Error fetching listings:', error);\n    }\n  };\n  const enlargeListing = listing => {\n    setSelectedListing(listing);\n    onEnlargedOpen();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://img.icons8.com/metro/52/swap.png\",\n            alt: \"swap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"logo-text\",\n            children: \"Zwappr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"tagline\",\n            children: \"For the small things.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 975,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modern-search-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search listings...\",\n              value: searchQuery,\n              onChange: handleSearch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"search-icon\",\n              src: \"https://img.icons8.com/ios-glyphs/30/search--v1.png\",\n              alt: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 976,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"circle-button\",\n            onClick: handleLogout,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircleUser\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 992,\n              columnNumber: 70\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"circle-button\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircleInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-bar\",\n        children: [{\n          name: 'Furniture',\n          icon: 'furniture.png'\n        }, {\n          name: 'Games',\n          icon: 'games.png'\n        }, {\n          name: 'Clothing',\n          icon: 'clothing.png'\n        }, {\n          name: 'Home Decor',\n          icon: 'homedecor.png'\n        }, {\n          name: 'Party Supplies',\n          icon: 'party.png'\n        }, {\n          name: 'Cameras & Photography',\n          icon: 'camersandphotography.png'\n        }, {\n          name: 'Camping & Outdoors',\n          icon: 'campingandoutdoors.png'\n        }, {\n          name: 'Catering Equipment',\n          icon: 'cateringequipment.png'\n        }].map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(`./assets/${category.icon}`),\n            alt: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 15\n          }, this)]\n        }, category.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 967,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        id: \"newlisting\",\n        color: \"black\",\n        fontSize: \"14px\",\n        colorScheme: \"white\",\n        onClick: onAddOpen,\n        children: \"+ Add New Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"filter\",\n        children: [\"Filter\", /*#__PURE__*/_jsxDEV(Select, {\n          iconSize: \"14px\",\n          id: \"filter\",\n          placeholder: \"None\",\n          onChange: e => console.log(e.target.value),\n          bg: \"white\",\n          color: \"black\",\n          border: \"none\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Reserved Items\",\n            children: \"Reserved items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1020,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Party Supplies\",\n            children: \"Party Supplies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Furniture\",\n            children: \"Furniture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Games\",\n            children: \"Games\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1023,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Clothing\",\n            children: \"Clothing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Home Decor\",\n            children: \"Home Decor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Camping & Outdoors\",\n            children: \"Camping & Outdoors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1026,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Catering Equipment\",\n            children: \"Catering Equipment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1019,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1018,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listings_box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub_listings_box\",\n        children: displayedListings.map(listing => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => enlargeListing(listing),\n          className: \"listing\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"listing_img\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: listing.image_url,\n              alt: listing.item_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1037,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1036,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"listing_info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"i_name_and_price\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: listing.item_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: listing.price_per_day\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              id: \"listing_location\",\n              children: listing.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1044,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n              size: \"xs\",\n              name: listing.username,\n              src: \"https://bit.ly/broken-link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: listing.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 95\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1039,\n            columnNumber: 15\n          }, this)]\n        }, listing.item_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 966,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"Vlj4O+mZDHJq3CENcc3KZwmTf6k=\", false, function () {\n  return [useDisclosure, useDisclosure, useToast, useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","isLoggedIn","removeUserSession","getUser","useNavigate","axios","DatePicker","Button","Select","Spinner","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","useDisclosure","useToast","Alert","AlertIcon","AlertTitle","Box","FontAwesomeIcon","faCircleUser","faCircleInfo","faRightFromBracket","Avatar","jsxDEV","_jsxDEV","Home","_s","usery","allListings","setAllListings","displayedListings","setDisplayedListings","searchQuery","setSearchQuery","selectedListing","setSelectedListing","isLoading","setIsLoading","error","setError","isOpen","isAddOpen","onOpen","onAddOpen","onClose","onAddClose","isEnlargedOpen","onEnlargedOpen","onEnlargedClose","toast","navigate","getAllListings","handleLogout","handleSearch","e","query","target","value","toLowerCase","filtered","filter","listing","item_name","includes","response","fetch","data","json","ok","console","enlargeListing","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","icon","name","map","category","require","id","color","fontSize","colorScheme","iconSize","log","bg","border","image_url","price_per_day","location","size","username","item_id","_c","$RefreshReg$"],"sources":["/Users/bheesha.k/Desktop/Zwappr-emiko-copy/zwappr/src/Home.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { isLoggedIn, removeUserSession } from './AuthServices';\n// import axios from 'axios';\n// import {DateSelector} from './DateSelector';\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './home.css';\n// import { ChakraProvider, IconButton, Input, Select, Button, Alert,AlertIcon, AlertTitle, useDisclosure, Box, Spinner, Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, useToast } from '@chakra-ui/react';\n// import { Avatar, AvatarBadge, AvatarGroup } from '@chakra-ui/react'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { getUser } from './AuthServices';\n// import { faThumbsDown, faThumbsUp, faCircleInfo, faPaperPlane, faCircleUser, faRightFromBracket } from '@fortawesome/free-solid-svg-icons';\n\n// import {\n//   Popover,\n//   PopoverTrigger,\n//   PopoverContent,\n//   PopoverHeader,\n//   PopoverBody,\n//   PopoverFooter,\n//   PopoverArrow,\n//   PopoverCloseButton,\n//   PopoverAnchor,\n// } from '@chakra-ui/react'\n\n\n\n\n// function Home() {\n//   const usery = getUser() || {};\n//   console.log(usery)\n//     const [allListings, setAllListings] = useState([]);\n//     const [displayedListings, setDisplayedListings] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [isLoading, setIsLoading] = useState(false);\n//     const [message, setMessage] = useState('');\n//     const [searchQuery, setSearchQuery] = useState('');\n//     const [selectedListing, setSelectedListing] = useState(null);\n//     const { isOpen: isAddOpen, onOpen: onAddOpen, onClose: onAddClose } = useDisclosure();\n//     const { isOpen: isEnlargedOpen, onOpen: onEnlargedOpen, onClose: onEnlargedClose } = useDisclosure();\n//     const [selectedImage, setSelectedImage] = useState(null);\n//     const [selectedFilter, setSelectedFilter] = useState('None');\n//     const toast = useToast();\n//     const [reservationDetails, setReservationDetails] = useState({\n//         start_date: null,\n//         end_date: null,\n//     });\n//     const [itemDetails, setItemDetails] = useState({\n//       username: '',\n//       email: '',\n//       image_url: '',\n//       location: '',\n//       category: '',\n//       item_name: '',\n//       price_per_day: '',\n//       description: '',\n//       start_date: null,\n//       end_date: null\n//   });\n\n  \n//   //UseEffects////////////////////////////////////////////////////\n//     useEffect(() => {\n//         getAllListings(); // Fetch listings on mount\n//     }, []);\n\n  \n\n//   const navigate = useNavigate();\n//   const handleLogout = () => {\n//     removeUserSession(); // Remove user session\n//     navigate('/'); // Redirect to the home page or login page\n//   };\n\n//   const handleSearch = (e) => {\n//     const query = e.target.value.toLowerCase();\n//     setSearchQuery(query);\n//     if (query === '') {\n//         setDisplayedListings(allListings);\n//     } else {\n//         const filteredListings = allListings.filter(listing =>\n//             listing.item_name && listing.item_name.toLowerCase().includes(query)\n//         );\n//         setDisplayedListings(filteredListings);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     const { id, value } = e.target;\n//     setItemDetails(prevDetails => ({\n//         ...prevDetails,\n//         [id]: value\n//     }));\n//   };\n\n//   const handleImageChange = (event) => {\n//     const file = event.target.files[0];\n//     setSelectedImage(file); // Store the selected file in state\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault(); // Prevent the default form submission behavior\n\n//     // Validate the form fields\n//     if (typeof itemDetails.item_name === 'string' && !itemDetails.item_name.trim()) {\n//         setError('Please enter a name.');\n//         return;\n//     }\n\n//     if (!itemDetails.category || itemDetails.category === 'None') {\n//         setError('Please select a category.');\n//         return;\n//     }\n\n//     if (!itemDetails.location) {\n//       setError('Please select a location.');\n//       return;\n//   }\n\n//     if (!itemDetails.start_date) {\n//         setError('Please select a start date.');\n//         return;\n//     }\n\n//     if (!itemDetails.end_date) {\n//         setError('Please select an end date.');\n//         return;\n//     }\n\n//     if (new Date(itemDetails.start_date) > new Date(itemDetails.end_date)) {\n//         setError('Start date cannot be later than the end date.');\n//         return;\n//     }\n\n//     if (!selectedImage) {\n//         setError('Please select an image.');\n//         return;\n//     }\n\n//     setIsLoading(true);\n//     setError('');\n\n//     try {\n//         // Creating a FormData object to send the image\n//         const formData = new FormData();\n//         formData.append('media', selectedImage);\n\n//         // Send the image to the backend\n//         const response = await axios.post('http://localhost:5001/uploadToCloudinary', formData, {\n//             headers: {\n//                 'Content-Type': 'multipart/form-data',\n//             },\n//         });\n\n//         console.log('Image uploaded successfully:', response.data.url);\n\n//         // Add the uploaded image URL to itemDetails\n//         const imageUrl = response.data.url;\n//         const updatedItemDetails = { ...itemDetails, image_url: imageUrl, username: usery.username, user_id: usery.user_id, email: usery.email };\n\n//         // Send `updatedItemDetails` to the backend to save the listing\n//         console.log('Final item details:', updatedItemDetails);\n\n//         const response2 = await fetch('http://localhost:5001/addListing', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify(updatedItemDetails),\n//         });\n\n//         if (response2.ok) {\n//             console.log('Item details added to database successfully.');\n//             setMessage('Item added successfully!');\n//             onAddClose();//modal is closed here and success toast is displayed\n//             toast({\n//                 title: 'Success',\n//                 description: 'Your Listing has been added',\n//                 status: 'success',\n//                 duration: 3000,\n//                 isClosable: true,\n//             });\n//             getAllListings();\n//         } else {\n//             const errorData = await response2.json();\n//             console.error('Error adding item details:', errorData.message);\n//             setError('Failed to add item. Image size might be too large. Please try again.');\n//         }\n\n//         setIsLoading(false);\n//     } catch (error) {\n//         console.error('Error uploading item:', error);\n//         setError('Failed to upload item. Please try again.');\n//         setIsLoading(false);\n//     }\n\n//     setItemDetails({\n//         username: '',\n//         email: '',\n//         image_url: '',\n//         location: '',\n//         category: '',\n//         item_name: '',\n//         price_per_day: '',\n//         description: '',\n//         start_date: null,\n//         end_date: null\n//     });\n// };\n\n// const handleFilterChange = (e) => {\n//   const value = e.target.value;\n//   setSelectedFilter(value);\n//   handleFilter(value);\n// };\n\n// const handleFilter = (filter) => {\n//   let filteredListings = [...allListings];\n\n//   if (filter === 'Reserved Items') {\n//     // Filter listings where the current user's user_id matches the current_renter field\n//     filteredListings = allListings.filter(\n//       (listing) => listing.current_renter && listing.current_renter === usery.user_id\n//     );\n//     console.log('Reserved items:', filteredListings);\n//   } else if (filter !== 'None') {\n//     // Filter listings by category\n//     filteredListings = allListings.filter((listing) => listing.category === filter);\n//   }\n\n//   // Apply search query filter if applicable\n//   if (searchQuery !== '') {\n//     filteredListings = filteredListings.filter((listing) =>\n//       listing.item_name.toLowerCase().includes(searchQuery)\n//     );\n//   }\n\n//   setDisplayedListings(filteredListings);\n// };\n\n// const cancelReservation = async () => {\n//   setIsLoading(true);\n//   setError('');\n\n//   try {\n//     const reservationData = {\n//       item_id: selectedListing?.item_id,\n//       renter_id: usery.user_id,\n//     };\n\n//     const response = await fetch('http://localhost:5001/cancelReservation', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(reservationData),\n//     });\n\n//     if (response.ok) {\n//       console.log('Reservation cancelled successfully.');\n//       setMessage('Reservation cancelled successfully!');\n//       toast({\n//         title: 'Success',\n//         description: 'Your reservation has been cancelled.',\n//         status: 'success',\n//         duration: 3000,\n//         isClosable: true,\n//       });\n//       onEnlargedClose(); // Close the enlarged listing modal\n//       setSelectedListing(null); // Reset selected listing\n//       getAllListings(); // Refresh listings\n//     } else {\n//       const errorData = await response.json();\n//       console.error('Error cancelling reservation:', errorData.message);\n//       setError('Failed to cancel reservation. Please try again.');\n//       toast({\n//         title: 'Error',\n//         description: 'Failed to cancel reservation. Please try again.',\n//         status: 'error',\n//         duration: 3000,\n//         isClosable: true,\n//       });\n//     }\n//   } catch (error) {\n//     console.error('Error cancelling reservation:', error);\n//     setError('Failed to cancel reservation. Please try again.');\n//     toast({\n//       title: 'Error',\n//       description: 'Failed to cancel reservation. Please try again.',\n//       status: 'error',\n//       duration: 3000,\n//       isClosable: true,\n//     });\n//   } finally {\n//     setIsLoading(false);\n//   }\n// }\n\n// const deleteListing = async () => {\n//   setIsLoading(true);\n//   setError('');\n\n//   try {\n//     const listingData = {\n//       item_id: selectedListing?.item_id,\n//       user_id: usery.user_id,\n//     };\n\n//     const response = await fetch('http://localhost:5001/removeListing', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(listingData),\n//     });\n\n//     if (response.ok) {\n//       console.log('Listing deleted successfully.');\n//       setMessage('Listing deleted successfully!');\n//       toast({\n//         title: 'Success',\n//         description: 'Your listing has been deleted.',\n//         status: 'success',\n//         duration: 3000,\n//         isClosable: true,\n//       });\n//       onEnlargedClose(); // Close the enlarged listing modal\n//       setSelectedListing(null); // Reset selected listing\n//       getAllListings(); // Refresh listings\n//     } else {\n//       const errorData = await response.json();\n//       console.error('Error deleting listing:', errorData.message);\n//       setError('Failed to delete listing. Please try again.');\n//       toast({\n//         title: 'Error',\n//         description: 'Failed to delete listing. Please try again.',\n//         status: 'error',\n//         duration: 3000,\n//         isClosable: true,\n//       });\n//     }\n//   } catch (error) {\n//     console.error('Error deleting listing:', error);\n//     setError('Failed to delete listing. Please try again.');\n//     toast({\n//       title: 'Error',\n//       description: 'Failed to delete listing. Please try again.',\n//       status: 'error',\n//       duration: 3000,\n//       isClosable: true,\n//     });\n//   } finally {\n//     setIsLoading(false);\n//   }\n// }\n\n// const enlargeListing = (listing) => {\n//   setSelectedListing(listing);\n//   onEnlargedOpen();\n// };\n\n// async function handleSubmitReservation() {\n//   console.log('Submitting reservation:');\n//   setIsLoading(true);\n//   setError('');\n\n//   // Validate the reservation dates\n//   if (!reservationDetails.start_date || !reservationDetails.end_date) {\n//     setError('Please select both start and end dates.');\n//     toast({\n//       title: 'Error',\n//       description: 'Please select both start and end dates.',\n//       status: 'error',\n//       duration: 3000,\n//       isClosable: true,\n//     });\n//     setIsLoading(false);\n//     return;\n//   }\n\n//   const selectedStartDate = new Date(reservationDetails.start_date);\n//   const selectedEndDate = new Date(reservationDetails.end_date);\n//   const listingStartDate = new Date(selectedListing?.start_date);\n//   const listingEndDate = new Date(selectedListing?.end_date);\n\n//   if (selectedStartDate < listingStartDate) {\n//     setError('Reservation start date cannot be before the listing start date.');\n//     toast({\n//       title: 'Error',\n//       description: 'Reservation start date cannot be before the listing start date.',\n//       status: 'error',\n//       duration: 3000,\n//       isClosable: true,\n//     });\n//     setIsLoading(false);\n//     return;\n//   }\n\n//   if (selectedEndDate > listingEndDate) {\n//     setError('Reservation end date cannot be after the listing end date.');\n//     toast({\n//       title: 'Error',\n//       description: 'Reservation end date cannot be after the listing end date.',\n//       status: 'error',\n//       duration: 3000,\n//       isClosable: true,\n//     });\n//     setIsLoading(false);\n//     return;\n//   }\n\n//   try {\n//     // Send reservation details to the backend\n//     const reservationData = {\n//       itemowner_id: selectedListing?.user_id,\n//       item_id: selectedListing?.item_id,\n//       renter_id: usery.user_id,//renter is the cuurent user\n//       reservation_start_date: reservationDetails.start_date,\n//       reservation_end_date: reservationDetails.end_date,\n//     };\n\n//     const response = await fetch('http://localhost:5001/addReservation', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(reservationData),\n//     });\n\n//     if (response.ok) {\n//       console.log('Reservation added successfully.');\n//       setMessage('Reservation added successfully!');\n//       toast({\n//         title: 'Success',\n//         description: 'Your reservation has been added.',\n//         status: 'success',\n//         duration: 3000,\n//         isClosable: true,\n//       });\n//       onEnlargedClose(); // Close the enlarged listing modal\n//       setReservationDetails({ start_date: null, end_date: null }); // Reset reservation details\n//       setSelectedListing(null); // Reset selected listing\n//       setDisplayedListings(allListings); // Reset displayed listings\n//       getAllListings(); // Refresh listings\n//     } else {\n//       const errorData = await response.json();\n//       console.error('Error adding reservation:', errorData.message);\n//       setError('Failed to add reservation. Please try again.');\n//       toast({\n//         title: 'Error',\n//         description: 'Failed to add reservation. Please try again.',\n//         status: 'error',\n//         duration: 3000,\n//         isClosable: true,\n//       });\n//     }\n//   } catch (error) {\n//     console.error('Error submitting reservation:', error);\n//     setError('Failed to submit reservation. Please try again.');\n//     toast({\n//       title: 'Error',\n//       description: 'Failed to submit reservation. Please try again.',\n//       status: 'error',\n//       duration: 3000,\n//       isClosable: true,\n//     });\n//   } finally {\n//     setIsLoading(false);\n//   }\n// }\n\n\n\n//   async function getAllListings (){\n//     try{\n//         const response = await fetch(`http://localhost:5001/getItems`, {\n//             method: 'GET',\n//             headers: { 'Content-Type': 'application/json',\n//                 \"Access-Control-Allow-Origin\": \"*\",\n//                 \"Access-Control-Allow-Headers\": \"Content-Type\",\n//                 \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET\"\n//             },\n//         });\n\n//         const data = await response.json();\n//         console.log('Response is HERE:', data);\n\n//         if (response.ok) {\n//             console.log('All Listings retrieved:', data);\n            \n//             // Update the state with the retrieved movie cards\n//             setAllListings(data.map(listing => ({ ...listing })));\n//             console.log('All Listings displayed here:', allListings);\n//             setDisplayedListings(data); \n\n//         } else{\n//             console.error('Error retrieving movie card:', data.message);\n//             setError('Error retrieving movie cards :-(');\n//         }\n    \n//     } catch (error) {\n//             console.log('An error getting cards occurred. Please try again.');\n//         }\n\n// }\n\n//  // return (\n//     // <div className=\"App\">\n//     //   <div className='topbar'>\n//     //     <div className='titleandlogo'><img width=\"52\" height=\"52\" src=\"https://img.icons8.com/metro/52/swap.png\" alt=\"swap\"/><p id='title'>Zwappr</p></div>\n//        // {\n//           /* <div className=\"top-container\">\n//   <div className=\"tagline\">For the small things.</div>\n//   <div className=\"modern-search-bar\">\n//     <input\n//       type=\"text\"\n//       placeholder=\"Search listings...\"\n//       value={searchQuery}\n//       onChange={handleSearch}\n//     />\n//     <img src=\"https://img.icons8.com/ios-filled/20/000000/search--v1.png\" alt=\"Search\" className=\"search-icon\" />\n//   </div>\n// </div>\n\n// <div className=\"category-bar\">\n//   {[\n//     { name: 'Furniture', icon: 'furniture.png' },\n//     { name: 'Games', icon: 'games.png' },\n//     { name: 'Clothing', icon: 'clothing.png' },\n//     { name: 'Home Decor', icon: 'homedecor.png' },\n//     { name: 'Party Supplies', icon: 'party.png' }, \n//     { name: 'Cameras & Photography', icon: 'camersandphotography.png' },\n//     { name: 'Camping & Outdoors', icon: 'campingandoutdoors.png' },\n//     { name: 'Catering Equipment', icon: 'cateringequipment.png' },\n//   ].map(category => (\n//     <div className=\"category\" key={category.name}>\n//       <img src={require(`./assets/${category.icon}`)} alt={category.name} />\n//       <span>{category.name}</span>\n//     </div>\n//   ))}\n// </div> */}\n\n// <div className=\"top-container\">\n//   <div className=\"header-row\">\n//     <div className=\"logo-section\">\n//       <img src=\"https://img.icons8.com/metro/52/swap.png\" alt=\"swap\" />\n//       <span className=\"logo-text\">Zwappr</span>\n//     </div>\n\n//     <div className=\"search-section\">\n//       <p className=\"tagline\">For the small things.</p>\n//       <div className=\"modern-search-bar\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search listings...\"\n//           value={searchQuery}\n//           onChange={handleSearch}\n//         />\n//         <img className=\"search-icon\" src=\"https://img.icons8.com/ios-glyphs/30/search--v1.png\" alt=\"search\" />\n//       </div>\n//     </div>\n\n//     <div className=\"icon-buttons\">\n//       <button className=\"circle-button\"><FontAwesomeIcon icon={faCircleUser} /></button>\n//       <button className=\"circle-button\"><FontAwesomeIcon icon={faCircleInfo} /></button>\n//     </div>\n//   </div>\n\n//   <div className=\"category-bar\">\n//     <div className=\"category\"><img src={require('./assets/furniture.png')} alt=\"Furniture\" /><span>Furniture</span></div>\n//     <div className=\"category\"><img src={require('./assets/games.png')} alt=\"Games\" /><span>Games</span></div>\n//     <div className=\"category\"><img src={require('./assets/clothing.png')} alt=\"Clothing\" /><span>Clothing</span></div>\n//     <div className=\"category\"><img src={require('./assets/homedecor.png')} alt=\"Home Decor\" /><span>Home Decor</span></div>\n//     <div className=\"category\"><img src={require('./assets/party.png')} alt=\"Party Supplies\" /><span>Party Supplies</span></div>\n//     <div className=\"category\"><img src={require('./assets/camersandphotography.png')} alt=\"Cameras\" /><span>Cameras & Photography</span></div>\n//     <div className=\"category\"><img src={require('./assets/campingandoutdoors.png')} alt=\"Camping\" /><span>Camping & Outdoors</span></div>\n//     <div className=\"category\"><img src={require('./assets/cateringequipment.png')} alt=\"Catering\" /><span>Catering Equipment</span></div>\n//   </div>\n// </div>\n\n\n\n//         <div className='profileicon'>\n//         <Popover >\n//             <PopoverTrigger>\n//                 <Button  _hover={{ bg: '#3eaff6' }} marginTop='5px'backgroundColor=\" rgb(80, 78, 78);\"><FontAwesomeIcon size=\"2xl\" style={{color: \"white\",}} icon={faCircleUser} /></Button>\n//             </PopoverTrigger>\n//             <PopoverContent width='50vw'backgroundColor=\" rgb(80, 78, 78);\">\n//                 <PopoverArrow />\n//                 <PopoverCloseButton />\n//                 <PopoverHeader>\n//                     <Avatar\n//                         size='lg'\n//                         name={usery?.username || 'Guest'} // Use 'Guest' if usery.username is undefined\n//                         src='https://bit.ly/broken-link'\n//                     />\n//                     <p id='pruh'><b>Hello, {usery?.username || 'Guest'}</b></p>\n//                     <p>Welcome!</p>\n//                 </PopoverHeader>\n//                 <PopoverBody>{isLoggedIn() && (<button onClick={handleLogout} className=\"logout_butt\">Logout <FontAwesomeIcon size='sm' icon={faRightFromBracket} style={{color: \"white\",}} /></button>)}</PopoverBody>\n//             </PopoverContent>\n//         </Popover>\n//         <Popover >\n//             <PopoverTrigger>\n//                 <Button _hover={{ bg: '#3eaff6' }} className=\"usecontrol\"marginTop='5px'backgroundColor=\" rgb(80, 78, 78);\"><FontAwesomeIcon icon={faCircleInfo} size=\"2xl\" style={{color: \"white\",}} /></Button>\n//             </PopoverTrigger>\n//             <PopoverContent width='50vw'backgroundColor=\" rgb(80, 78, 78);\">\n//                 <PopoverArrow />\n//                 <PopoverCloseButton />\n//                 <PopoverHeader>Info</PopoverHeader>\n//                 <PopoverBody>\n//                     <ul>\n//                         <li>Press the Add Listing button to post a listing.</li>\n//                         &nbsp;\n//                         <li>Click on each listing to see more.</li>\n//                     </ul>\n//                 </PopoverBody>\n//             </PopoverContent>\n//         </Popover>\n//         </div>\n//       </div>\n\n\n//       <div className='buttons'>\n//       <Button id='newlisting' color='black' fontSize='14px' colorScheme='white;' onClick={onAddOpen}>+ Add New Listing</Button>\n//         <div id='filter'>Filter\n//         <Select iconSize='14px' id='filter' placeholder='' onChange={handleFilterChange} bg=\"white\" color=\"black\" border=\"none\">\n//             <option value='None'>None</option>\n//             <option value='Reserved Items'>Reserved items</option>\n//             <option value='Party Supplies'>Party Supplies</option>\n//             <option value='Camera Equipment'>Camera Equipment</option>\n//             <option value='Furniture'>Furniture</option>\n//             <option value='Games'>Games</option>\n//             <option value='Clothing'>Clothing</option>\n//             <option value='Home Decor'>Home Decor</option>\n//             <option value='Camping & Outdoors'>Camping & Outdoors</option>\n//             <option value='Catering Equipment'>Catering Equipment</option>\n//             <option value='Books'>Books</option>\n//             <option value='Other'>Other</option>\n            \n//         </Select>\n\n//         </div>\n//       </div>\n\n\n//       <div className ='listings_box'>\n//         <div className='sub_listings_box'>\n//           {displayedListings.map((listing) => (\n//             <div key={listing.item_id} onClick={() => enlargeListing(listing)}className='listing'>\n            \n//               <div id='listing_img'>\n//                 <img src={listing.image_url} alt={listing.title} className='listing_image' id='listing_img'/>\n//               </div>\n//               <div id='listing_info'>\n//               <div id='i_name_and_price'><h3>{listing.item_name}</h3> <h3>{listing.price_per_day}</h3> </div>\n//               <p id='listing_location'>{listing.location}</p>\n//               <Avatar colorPalette='black' size='2xs'name={listing.username} src='https://bit.ly/broken-link' />&nbsp;<b>{listing.username}</b>\n\n\n//               </div>\n              \n//             </div>\n//           ))}\n//         </div>\n//       </div>\n\n\n\n\n//       {/* Add Listing Modal */}\n//       <Modal id='listing_entry' isOpen={isAddOpen} onClose={onAddClose}>\n//                     <ModalOverlay />\n//                     <ModalContent>\n//                         <ModalHeader>Add an Item for Rent!</ModalHeader>\n//                         <ModalCloseButton />\n//                         <ModalBody>\n                            \n//                                 <Box id='i_name'>\n//                                     Item Name:<Input id='item_name' focusBorderColor='black' placeholder='e.g. Camera' value={itemDetails.item_name} onChange={handleChange} />\n//                                 </Box>\n//                                 <Box id='i_price'>\n//                                     Price Per Day ($):<Input id='price_per_day' focusBorderColor='black' placeholder='e.g. 50' value={itemDetails.price_per_day} onChange={handleChange} />\n//                                 </Box>\n//                                 <Box id='i_category'>\n//                                     Category: \n//                                     <Select id='category' focusBorderColor='black' iconSize='20px' className='item_filter' placeholder='None' value={itemDetails.category} onChange={handleChange}>\n//                                         <option value='Party Supplies'>Party Supplies</option>\n//                                         <option value='Camera Equipment'>Camera Equipment</option>\n//                                         <option value='Furniture'>Furniture</option>\n//                                         <option value='Games'>Games</option>\n//                                         <option value='Clothing'>Clothing</option>\n//                                         <option value='Home Decor'>Home Decor</option>\n//                                         <option value='Camping & Outdoors'>Camping & Outdoors</option>\n//                                         <option value='Catering Equipment'>Catering Equipment</option>\n//                                         <option value='Books'>Books</option>\n//                                         <option value='Other'>Other</option>\n//                                     </Select>\n//                                 </Box>\n\n//                                 <Box id='i_location'>\n//                                     Location: \n//                                     <Select id='location' focusBorderColor='black' iconSize='20px' className='item_location' placeholder='None' value={itemDetails.location} onChange={handleChange}>\n//                                       <option value=\"\">Select Dorm / Building</option>\n//                                       <option value=\"Cascade Hall\">Cascade Hall</option>\n//                                       <option value=\"Aurora Hall\">Aurora Hall</option>\n//                                       <option value=\"Olympus Hall\">Olympus Hall</option>\n//                                       <option value=\"Yamnuska Hall\">Yamnuska Hall</option>\n//                                       <option value=\"Global Village\">Global Village</option>\n//                                       <option value=\"Kananaskis Hall\">Kananaskis Hall</option>\n//                                       <option value=\"Rundle Hall\">Rundle Hall</option>\n//                                       <option value=\"Crowsnest Hall\">Crowsnest Hall</option>\n//                                       <option value=\"International House\">International House</option>\n//                                       <option value=\"Varsity Courts\">Varsity Courts</option>\n//                                     </Select>\n//                                 </Box>\n                                \n//                                 <Box id=\"i_img\">\n//                                     Image:\n//                                     <Input\n//                                         id=\"item_image\"\n//                                         focusBorderColor=\"black\"\n//                                         type=\"file\"\n//                                         onChange={handleImageChange} // Capture the selected image into a useState\n//                                     />\n//                                 </Box>\n//                                 <Box id='i_description'>\n//                                     About:<Input id='description' focusBorderColor='black' placeholder='e.g. Say something about your listing...' value={itemDetails.description} onChange={handleChange} />\n//                                 </Box>\n//                                 <Box id='i_start_date'>\n//                                     Start Date:\n//                                     <DatePicker\n//                                         selected={itemDetails.start_date}\n//                                         onChange={(date) => setItemDetails(prevDetails => ({\n//                                             ...prevDetails,\n//                                             start_date: date.toISOString() // Save as ISO string\n//                                         }))}\n//                                         dateFormat=\"yyyy-MM-dd\"\n//                                         placeholderText=\"Select a start date\"\n//                                         focusBorderColor='black'\n//                                     />\n//                                 </Box>\n//                                 <Box id='i_end_date'>\n//                                     End Date:\n//                                     <DatePicker\n//                                         selected={itemDetails.end_date}\n//                                         onChange={(date) => setItemDetails(prevDetails => ({\n//                                             ...prevDetails,\n//                                             end_date: date.toISOString() // Save as ISO string\n//                                         }))}\n//                                         dateFormat=\"yyyy-MM-dd\"\n//                                         placeholderText=\"Select an end date\"\n//                                         focusBorderColor='black'\n//                                     />\n//                                 </Box>\n\n                        \n//                             {error && (\n//                                 <Alert status='error' mt={4}>\n//                                     <AlertIcon />\n//                                     <AlertTitle>{error}</AlertTitle>\n//                                 </Alert>\n//                             )}\n//                         </ModalBody>\n//                         <ModalFooter>\n//                             <Button colorScheme='blue' mr={3} onClick={onAddClose}>\n//                                 Close\n//                             </Button>\n//                             <Button\n//                                 id='submit_details'\n//                                 variant='ghost'\n//                                 onClick={handleSubmit}\n//                                 isLoading={isLoading}\n//                                 loadingText='Submitting'\n//                                 spinner={<Spinner size=\"sm\" />}\n//                             >\n//                                 Submit\n//                             </Button>\n//                         </ModalFooter>\n//                     </ModalContent>\n//                 </Modal>\n\n\n//       {/* Enlarged Listing Modal */}\n\n//       <Modal className='enlargedCard' isOpen={isEnlargedOpen} onClose={onEnlargedClose} size='lg'>\n//                     <ModalOverlay />\n//                     <ModalContent bg=\"white\" color=\"black\" overflowY='scroll' maxWidth='100%' maxHeight='80%'>\n//                         <ModalHeader display=\"flex\" flexDirection=\"column\" alignItems='center' textAlign=\"center\"><div className='titleandlogo'><img width=\"52\" height=\"52\" src=\"https://img.icons8.com/metro/52/swap.png\" alt=\"swap\"/><p id='title'>Zwappr</p></div></ModalHeader>\n//                         <ModalCloseButton />\n//                         <ModalBody display=\"flex\" flexDirection=\"row\" alignItems=\"center\" marginLeft=\"5%\" marginRight=\"5%\" height=\"fit-content\" overflow-y=\"scroll\" justifyContent=\"space-evenly\">\n//                             <div id='left_side'>\n//                               <p id='listing_name'>{selectedListing?.item_name}</p>\n//                               <img src={selectedListing?.image_url} alt={selectedListing?.item_name} className='listing_image' id='enlarged_img'/>\n//                               <Avatar colorPalette='black' size='md'name={selectedListing?.username} src='https://bit.ly/broken-link' />&nbsp;<h2><b>{selectedListing?.username}</b></h2>\n//                               <p id='listing_description'>{selectedListing?.description}</p>\n//                               <p id='listing_email'><b>Email: {selectedListing?.email}</b></p>\n//                             </div>\n//                             <div id='right_side'>\n//                             <div id='reservation_details'>\n//                               <h2><b>${selectedListing?.price_per_day}</b>/day</h2>\n//                               <p id='listing_location'><b>Location:</b> {selectedListing?.location}</p>\n//                               <p id='listing_dates'>\n//                                 <b>Available From:</b> {new Date(selectedListing?.start_date).toLocaleDateString('en-GB')} \n//                                 <b>To:</b> {new Date(selectedListing?.end_date).toLocaleDateString('en-GB')}\n//                               </p>\n//                               <div>\n//                                 From:\n//                                 <DatePicker\n//                                   selected={reservationDetails.start_date}\n//                                   onChange={(date) => setReservationDetails(prevDetails => ({\n//                                     ...prevDetails,\n//                                     start_date: date.toISOString() // Save as ISO string\n//                                   }))}\n//                                   dateFormat=\"yyyy-MM-dd\"\n//                                   placeholderText=\"Select a start date\"\n//                                   focusBorderColor='black'\n//                                 />\n//                               </div>\n//                               <div>\n//                                 To:\n//                                 <DatePicker\n//                                   selected={reservationDetails.end_date}\n//                                   onChange={(date) => setReservationDetails(prevDetails => ({\n//                                     ...prevDetails,\n//                                     end_date: date.toISOString() // Save as ISO string\n//                                   }))}\n//                                   dateFormat=\"yyyy-MM-dd\"\n//                                   placeholderText=\"Select an end date\"\n//                                   focusBorderColor='black'\n//                                 />\n//                               </div>\n\n//                               {/* submit_reservation element rendered only if current user is not the smae as owner of item */}\n//                               {selectedListing?.isBooked === false && usery.user_id !== selectedListing?.user_id && (\n//                                 <div id='submit_reservation' className='reservation_options'>\n//                                   <Button\n//                                     id='submit_reservation'\n//                                     variant='ghost'\n//                                     onClick={() => handleSubmitReservation()}\n//                                     isLoading={isLoading}\n//                                     loadingText='Submitting'\n//                                     spinner={<Spinner size=\"sm\" />}\n//                                   >\n//                                     Reserve\n//                                   </Button>\n//                                 </div>\n//                               )}\n\n//                               {/* item_reserved element is displayed only if the isBooked field for the item is true */}\n//                               {selectedListing?.isBooked === true && (\n//                                 <div id='item_reserved' className='reservation_options'>\n//                                   Item Currently Reserved\n//                                 </div>\n//                               )}\n\n//                               {/* cancel_reservation element is displayed if the current user owns the selectedListing or if the current user is currently rennting the item*/}\n//                               {selectedListing?.isBooked === true && \n//                                 (usery.user_id === selectedListing?.current_renter || usery.user_id === selectedListing?.user_id) && (\n//                                 <div id='cancel_reservation' className='reservation_options' onClick={cancelReservation}>\n//                                   Cancel Current Reservation\n//                                 </div>\n//                               )}\n\n//                               {/* delete_listing element is displayed only if the current user owns the item */}\n//                               {usery.user_id === selectedListing?.user_id && (\n//                                 <div id='delete_listing' className='reservation_options' onClick={deleteListing}>\n//                                   Delete Listing\n//                                 </div>\n//                               )}\n//                             </div>\n\n//                             </div>\n                        \n\n//                         </ModalBody>\n                            \n//                         <ModalFooter>\n//                             <Button colorScheme=\"black\" mr={3} onClick={onEnlargedClose}>\n//                                 Close\n//                             </Button>\n//                         </ModalFooter>\n//                     </ModalContent>\n//                 </Modal>\n\n\n//     </div>\n//   );\n// }\n\n// export default Home;\n\n// Final Home.js implementation with duplicates removed and layout structured cleanly\n// Based on your design preferences\n\n// Final cleaned and structured Home.js using Emiko's layout\n\nimport React, { useEffect, useState } from 'react';\nimport { isLoggedIn, removeUserSession, getUser } from './AuthServices';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport {\n  Button, Select, Spinner, Modal, ModalOverlay, ModalContent,\n  ModalHeader, ModalFooter, ModalBody, ModalCloseButton,\n  useDisclosure, useToast, Alert, AlertIcon, AlertTitle, Box\n} from '@chakra-ui/react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleUser, faCircleInfo, faRightFromBracket } from '@fortawesome/free-solid-svg-icons';\nimport { Avatar } from '@chakra-ui/react';\nimport './home.css';\n\nfunction Home() {\n  const usery = getUser() || {};\n  const [allListings, setAllListings] = useState([]);\n  const [displayedListings, setDisplayedListings] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedListing, setSelectedListing] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const { isOpen: isAddOpen, onOpen: onAddOpen, onClose: onAddClose } = useDisclosure();\n  const { isOpen: isEnlargedOpen, onOpen: onEnlargedOpen, onClose: onEnlargedClose } = useDisclosure();\n  const toast = useToast();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    getAllListings();\n  }, []);\n\n  const handleLogout = () => {\n    removeUserSession();\n    navigate('/');\n  };\n\n  const handleSearch = (e) => {\n    const query = e.target.value.toLowerCase();\n    setSearchQuery(query);\n    const filtered = allListings.filter(listing =>\n      listing.item_name && listing.item_name.toLowerCase().includes(query)\n    );\n    setDisplayedListings(query ? filtered : allListings);\n  };\n\n  const getAllListings = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/getItems');\n      const data = await response.json();\n      if (response.ok) {\n        setAllListings(data);\n        setDisplayedListings(data);\n      }\n    } catch (error) {\n      console.error('Error fetching listings:', error);\n    }\n  };\n\n  const enlargeListing = (listing) => {\n    setSelectedListing(listing);\n    onEnlargedOpen();\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"top-container\">\n        <div className=\"header-row\">\n          <div className=\"logo-section\">\n            <img src=\"https://img.icons8.com/metro/52/swap.png\" alt=\"swap\" />\n            <span className=\"logo-text\">Zwappr</span>\n          </div>\n\n          <div className=\"search-section\">\n            <p className=\"tagline\">For the small things.</p>\n            <div className=\"modern-search-bar\">\n              <input\n                type=\"text\"\n                placeholder=\"Search listings...\"\n                value={searchQuery}\n                onChange={handleSearch}\n              />\n              <img\n                className=\"search-icon\"\n                src=\"https://img.icons8.com/ios-glyphs/30/search--v1.png\"\n                alt=\"search\"\n              />\n            </div>\n          </div>\n\n          <div className=\"icon-buttons\">\n            <button className=\"circle-button\" onClick={handleLogout}><FontAwesomeIcon icon={faCircleUser} /></button>\n            <button className=\"circle-button\"><FontAwesomeIcon icon={faCircleInfo} /></button>\n          </div>\n        </div>\n\n        <div className=\"category-bar\">\n          {[\n            { name: 'Furniture', icon: 'furniture.png' },\n            { name: 'Games', icon: 'games.png' },\n            { name: 'Clothing', icon: 'clothing.png' },\n            { name: 'Home Decor', icon: 'homedecor.png' },\n            { name: 'Party Supplies', icon: 'party.png' },\n            { name: 'Cameras & Photography', icon: 'camersandphotography.png' },\n            { name: 'Camping & Outdoors', icon: 'campingandoutdoors.png' },\n            { name: 'Catering Equipment', icon: 'cateringequipment.png' },\n          ].map(category => (\n            <div className=\"category\" key={category.name}>\n              <img src={require(`./assets/${category.icon}`)} alt={category.name} />\n              <span>{category.name}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className='buttons'>\n        <Button id='newlisting' color='black' fontSize='14px' colorScheme='white' onClick={onAddOpen}>+ Add New Listing</Button>\n        <div id='filter'>Filter\n          <Select iconSize='14px' id='filter' placeholder='None' onChange={(e) => console.log(e.target.value)} bg=\"white\" color=\"black\" border=\"none\">\n            <option value='Reserved Items'>Reserved items</option>\n            <option value='Party Supplies'>Party Supplies</option>\n            <option value='Furniture'>Furniture</option>\n            <option value='Games'>Games</option>\n            <option value='Clothing'>Clothing</option>\n            <option value='Home Decor'>Home Decor</option>\n            <option value='Camping & Outdoors'>Camping & Outdoors</option>\n            <option value='Catering Equipment'>Catering Equipment</option>\n          </Select>\n        </div>\n      </div>\n\n      <div className='listings_box'>\n        <div className='sub_listings_box'>\n          {displayedListings.map((listing) => (\n            <div key={listing.item_id} onClick={() => enlargeListing(listing)} className='listing'>\n              <div id='listing_img'>\n                <img src={listing.image_url} alt={listing.item_name} />\n              </div>\n              <div id='listing_info'>\n                <div id='i_name_and_price'>\n                  <h3>{listing.item_name}</h3>\n                  <h3>{listing.price_per_day}</h3>\n                </div>\n                <p id='listing_location'>{listing.location}</p>\n                <Avatar size='xs' name={listing.username} src='https://bit.ly/broken-link' /> <b>{listing.username}</b>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}