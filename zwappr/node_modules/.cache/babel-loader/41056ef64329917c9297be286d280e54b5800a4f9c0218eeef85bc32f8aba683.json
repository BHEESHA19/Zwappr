{"ast":null,"code":"var _jsxFileName = \"/Users/bheesha.k/Desktop/Zwappr-emiko-copy/zwappr/src/Communities.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Communities.css';\nimport { Button } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Communities = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [message, setMessage] = useState('');\n  const [contactInfo, setContactInfo] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const username = localStorage.getItem('username');\n  const userId = localStorage.getItem('user_id');\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/getCommunityPosts');\n      const data = await response.json();\n      setPosts(data);\n    } catch (err) {\n      console.error('Error fetching posts:', err);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  const handleSubmit = async () => {\n    if (!message || !contactInfo) return;\n    try {\n      const response = await fetch('http://localhost:5001/createCommunityPost', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: userId,\n          username: username,\n          message: message,\n          contact_info: contactInfo\n        })\n      });\n      if (response.ok) {\n        setSuccessMessage('Post created successfully!');\n        setMessage('');\n        setContactInfo('');\n        fetchPosts();\n      }\n    } catch (err) {\n      console.error('Error creating post:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Community Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write your message here...\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your contact info\",\n        value: contactInfo,\n        onChange: e => setContactInfo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        colorScheme: \"blackAlpha\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-list\",\n      children: posts.sort((a, b) => new Date(b.timestamp.S) - new Date(a.timestamp.S)).map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user\",\n          children: [\"\\uD83D\\uDC64 \", post.username.S]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: post.message.S\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contact\",\n          children: [\"\\uD83D\\uDCDE \", post.contact_info.S]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timestamp\",\n          children: new Date(post.timestamp.S).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, post.post_id.S, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Communities, \"U7ZnEF2cwGCk7gAojYS3r4/YkT4=\");\n_c = Communities;\nexport default Communities;\nvar _c;\n$RefreshReg$(_c, \"Communities\");","map":{"version":3,"names":["React","useEffect","useState","Button","jsxDEV","_jsxDEV","Communities","_s","posts","setPosts","message","setMessage","contactInfo","setContactInfo","successMessage","setSuccessMessage","username","localStorage","getItem","userId","fetchPosts","response","fetch","data","json","err","console","error","handleSubmit","method","headers","body","JSON","stringify","user_id","contact_info","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","type","onClick","colorScheme","sort","a","b","Date","timestamp","S","map","post","toLocaleString","post_id","_c","$RefreshReg$"],"sources":["/Users/bheesha.k/Desktop/Zwappr-emiko-copy/zwappr/src/Communities.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Communities.css';\nimport { Button } from '@chakra-ui/react';\n\nconst Communities = () => {\n  const [posts, setPosts] = useState([]);\n  const [message, setMessage] = useState('');\n  const [contactInfo, setContactInfo] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const username = localStorage.getItem('username');\n  const userId = localStorage.getItem('user_id');\n\n  const fetchPosts = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/getCommunityPosts');\n      const data = await response.json();\n      setPosts(data);\n    } catch (err) {\n      console.error('Error fetching posts:', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n\n  const handleSubmit = async () => {\n    if (!message || !contactInfo) return;\n    try {\n      const response = await fetch('http://localhost:5001/createCommunityPost', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          user_id: userId,\n          username: username,\n          message: message,\n          contact_info: contactInfo\n        })\n      });\n\n      if (response.ok) {\n        setSuccessMessage('Post created successfully!');\n        setMessage('');\n        setContactInfo('');\n        fetchPosts();\n      }\n    } catch (err) {\n      console.error('Error creating post:', err);\n    }\n  };\n\n  return (\n    <div className=\"community-page\">\n      <h1>Community Posts</h1>\n\n      <div className=\"post-box\">\n        <textarea\n          placeholder=\"Write your message here...\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        ></textarea>\n        <input\n          type=\"text\"\n          placeholder=\"Your contact info\"\n          value={contactInfo}\n          onChange={(e) => setContactInfo(e.target.value)}\n        />\n        <Button onClick={handleSubmit} colorScheme=\"blackAlpha\">\n          Post\n        </Button>\n        {successMessage && <p className=\"success-message\">{successMessage}</p>}\n      </div>\n\n      <div className=\"posts-list\">\n        {posts\n          .sort((a, b) => new Date(b.timestamp.S) - new Date(a.timestamp.S))\n          .map((post) => (\n            <div className=\"post\" key={post.post_id.S}>\n              <div className=\"user\">ðŸ‘¤ {post.username.S}</div>\n              <div className=\"message\">{post.message.S}</div>\n              <div className=\"contact\">ðŸ“ž {post.contact_info.S}</div>\n              <div className=\"timestamp\">\n                {new Date(post.timestamp.S).toLocaleString()}\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Communities;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}